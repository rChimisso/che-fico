Index: app/src/main/java/com/kreinto/chefico/views/plantdetail/PlantDetailView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.kreinto.chefico.views.plantdetail\r\n\r\nimport android.graphics.BitmapFactory\r\nimport androidx.compose.animation.AnimatedVisibility\r\nimport androidx.compose.animation.EnterTransition\r\nimport androidx.compose.animation.fadeOut\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.rounded.Add\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.LaunchedEffect\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.draw.rotate\r\nimport androidx.compose.ui.draw.shadow\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.graphics.asImageBitmap\r\nimport androidx.compose.ui.layout.ContentScale\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport com.kreinto.chefico.AppRoute\r\nimport com.kreinto.chefico.components.frames.SimpleFrame\r\nimport com.kreinto.chefico.views.camera.PlantRecognition\r\nimport java.io.File\r\n\r\n@ExperimentalMaterial3Api\r\n@Composable\r\nfun PlantDetailView(\r\n  onNavigate: (String) -> Unit,\r\n  imageName: String?,\r\n) {\r\n  val image = File(\"${LocalContext.current.cacheDir}/${imageName ?: \"/\"}\")\r\n  val result = remember { mutableStateOf(PlantRecognition.InvalidData) }\r\n  var description = remember { mutableStateOf(\"\") }\r\n\r\n  LaunchedEffect(Unit) {\r\n    PlantRecognition.recognize(image) {\r\n      result.value = it\r\n      PlantRecognition.fetchPlantDescription(\r\n        result.value.results?.getOrNull(0)?.species?.commonNames?.getOrNull(\r\n          0\r\n        ) ?: \"\"\r\n      ) {\r\n        description.value =\r\n          it.getOrNull(0)?.extract.toString()\r\n      }\r\n    }\r\n  }\r\n\r\n  SimpleFrame(\r\n    onBackPressed = onNavigate,\r\n\r\n    ) {\r\n    Column(\r\n      modifier = Modifier\r\n        .padding(it)\r\n        .fillMaxWidth()\r\n        .padding(16.dp),\r\n      horizontalAlignment = Alignment.CenterHorizontally\r\n    ) {\r\n      val imgBitmap = BitmapFactory.decodeFile(image.absolutePath)\r\n\r\n      Image(\r\n        bitmap = imgBitmap.asImageBitmap(),\r\n        contentDescription = \"\",\r\n        contentScale = ContentScale.FillBounds,\r\n        modifier = Modifier\r\n          .height(350.dp)\r\n          .rotate(90f)\r\n          .clip(RoundedCornerShape(10.dp))\r\n          .shadow(12.dp)\r\n      )\r\n      Spacer(modifier = Modifier.height(16.dp))\r\n      Surface(\r\n        shadowElevation = 12.dp,\r\n        shape = RoundedCornerShape(8.dp),\r\n        modifier = Modifier\r\n          .fillMaxWidth()\r\n          .padding(16.dp)\r\n      ) {\r\n\r\n        Column(modifier = Modifier.fillMaxWidth()) {\r\n\r\n          Row(\r\n            modifier = Modifier.padding(vertical = 8.dp, horizontal = 16.dp),\r\n            verticalAlignment = Alignment.CenterVertically\r\n          ) {\r\n            Text(\r\n              text = result.value.results?.getOrNull(0)?.species?.commonNames?.getOrNull(0) ?: \"\",\r\n              fontSize = 21.sp,\r\n              color = Color(0xff4caf50)\r\n            )\r\n            Spacer(modifier = Modifier.weight(1f))\r\n            IconButton(\r\n              colors = IconButtonDefaults.iconButtonColors(\r\n                contentColor = Color.Green\r\n              ),\r\n              onClick = {\r\n                onNavigate(AppRoute.PoiCreation.route)\r\n              }) {\r\n              Icon(\r\n                imageVector = Icons.Rounded.Add,\r\n                contentDescription = \"\"\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n      Surface {\r\n        Column {\r\n\r\n          Row {\r\n            Text(\"Conosciuta come:\")\r\n            Spacer(Modifier.width(16.dp))\r\n            var len = result.value.results?.size ?: 0\r\n            result.value.results?.getOrNull(0)?.species?.commonNames?.forEach { name ->\r\n              if (name != null) {\r\n                Text(name)\r\n              }\r\n            }\r\n          }\r\n          Text(description.value)\r\n        }\r\n      }\r\n    }\r\n    AnimatedVisibility(\r\n      modifier = Modifier.fillMaxSize(),\r\n      visible = !result.value.isValid(),\r\n      enter = EnterTransition.None,\r\n      exit = fadeOut()\r\n    ) {\r\n      CircularProgressIndicator(\r\n        modifier = Modifier\r\n          .background(MaterialTheme.colorScheme.background)\r\n          .wrapContentSize()\r\n      )\r\n    }\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/kreinto/chefico/views/plantdetail/PlantDetailView.kt b/app/src/main/java/com/kreinto/chefico/views/plantdetail/PlantDetailView.kt
--- a/app/src/main/java/com/kreinto/chefico/views/plantdetail/PlantDetailView.kt	(revision 419ad537dcf3dc2435e5e5abb54a52fddc4b456c)
+++ b/app/src/main/java/com/kreinto/chefico/views/plantdetail/PlantDetailView.kt	(date 1678117098186)
@@ -45,12 +45,9 @@
     PlantRecognition.recognize(image) {
       result.value = it
       PlantRecognition.fetchPlantDescription(
-        result.value.results?.getOrNull(0)?.species?.commonNames?.getOrNull(
-          0
-        ) ?: ""
+        result.value.results?.getOrNull(0)?.species?.commonNames?.getOrNull(0) ?: ""
       ) {
-        description.value =
-          it.getOrNull(0)?.extract.toString()
+        description.value = it.getOrNull(0)?.extract.toString()
       }
     }
   }
